{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "Exported element should have a comment",
  "tags": [
    "go"
  ],
  "severity": "Moderate",
  "comment": "Exported type 'CreateGuildJSON' should have a comment or be unexported",
  "detailsInfo": "Reports exported declarations without a documentation comment. According to [Doc Comments at golang.org](https://golang.org/wiki/CodeReviewComments#doc-comments), all top-level exported names should have doc comments.\n\nAlso, for more information about comment sentences, see [Comment\nSentences at golang.org](https://golang.org/wiki/CodeReviewComments#comment-sentences).\n\nTo add a comment, you can apply the **Add comment** quick-fix.",
  "sources": [
    {
      "type": "file",
      "path": "api/guild_endpoints.go",
      "language": "go",
      "line": 51,
      "offset": 6,
      "length": 15,
      "code": {
        "startLine": 49,
        "length": 15,
        "offset": 8,
        "surroundingCode": "}\n\ntype CreateGuildJSON struct {\n\tName                        string                          `json:\"name\"`                          // guild name (2-100 characters, excluding trailing and leading whitespace)\n\tIcon                        *string                         `json:\"icon\"`                          // icon hash"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoExportedElementShouldHaveComment"
  },
  "hash": "2420b205ec5628517153f2f717ce6f1b70cfd868f9998121776b65ebc6118d71"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "Exported element should have a comment",
  "tags": [
    "go"
  ],
  "severity": "Moderate",
  "comment": "Exported type 'ModifyGuildJSON' should have a comment or be unexported",
  "detailsInfo": "Reports exported declarations without a documentation comment. According to [Doc Comments at golang.org](https://golang.org/wiki/CodeReviewComments#doc-comments), all top-level exported names should have doc comments.\n\nAlso, for more information about comment sentences, see [Comment\nSentences at golang.org](https://golang.org/wiki/CodeReviewComments#comment-sentences).\n\nTo add a comment, you can apply the **Add comment** quick-fix.",
  "sources": [
    {
      "type": "file",
      "path": "api/guild_endpoints.go",
      "language": "go",
      "line": 117,
      "offset": 6,
      "length": 15,
      "code": {
        "startLine": 115,
        "length": 15,
        "offset": 8,
        "surroundingCode": "}\n\ntype ModifyGuildJSON struct {\n\tName                        string                           `json:\"name\"`                          // guild name (2-100 characters, excluding trailing and leading whitespace)\n\tVerificationLevel           *VerificationLevel               `json:\"verification_level\"`            // verification level required for the guild"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoExportedElementShouldHaveComment"
  },
  "hash": "449d00e01e40f8b58b0aa367699808615cead37cc9c65b014a50d6a960f8894b"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "Exported element should have a comment",
  "tags": [
    "go"
  ],
  "severity": "Moderate",
  "comment": "Exported type 'CreateGuildChannelJSON' should have a comment or be unexported",
  "detailsInfo": "Reports exported declarations without a documentation comment. According to [Doc Comments at golang.org](https://golang.org/wiki/CodeReviewComments#doc-comments), all top-level exported names should have doc comments.\n\nAlso, for more information about comment sentences, see [Comment\nSentences at golang.org](https://golang.org/wiki/CodeReviewComments#comment-sentences).\n\nTo add a comment, you can apply the **Add comment** quick-fix.",
  "sources": [
    {
      "type": "file",
      "path": "api/guild_endpoints.go",
      "language": "go",
      "line": 178,
      "offset": 6,
      "length": 22,
      "code": {
        "startLine": 176,
        "length": 22,
        "offset": 8,
        "surroundingCode": "}\n\ntype CreateGuildChannelJSON struct {\n\tName                       string      `json:\"name,omitempty\"`                          // the name of the channel (1-100 characters)\n\tType                       ChannelType `json:\"type\"`                                    // the ChannelType"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoExportedElementShouldHaveComment"
  },
  "hash": "0f71832dabf8f6ad09fd46cc982931506414091336f84edff6c116018ec8fd21"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "Exported element should have a comment",
  "tags": [
    "go"
  ],
  "severity": "Moderate",
  "comment": "Exported method 'CreateGuildRole' should have a comment or be unexported",
  "detailsInfo": "Reports exported declarations without a documentation comment. According to [Doc Comments at golang.org](https://golang.org/wiki/CodeReviewComments#doc-comments), all top-level exported names should have doc comments.\n\nAlso, for more information about comment sentences, see [Comment\nSentences at golang.org](https://golang.org/wiki/CodeReviewComments#comment-sentences).\n\nTo add a comment, you can apply the **Add comment** quick-fix.",
  "sources": [
    {
      "type": "file",
      "path": "api/guild_endpoints.go",
      "language": "go",
      "line": 471,
      "offset": 17,
      "length": 15,
      "code": {
        "startLine": 469,
        "length": 15,
        "offset": 19,
        "surroundingCode": "}\n\nfunc (g *Guild) CreateGuildRole(payload *CreateGuildRoleJSON, reason *string) ([]*Role, error) {\n\tu := parseRoute(fmt.Sprintf(createGuildRole, api, g.ID.String()))\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoExportedElementShouldHaveComment"
  },
  "hash": "2f957cdf59f626617fc6abc8b97ca385defd4db4b6c280de2b5ece880de7ea02"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "Exported element should have a comment",
  "tags": [
    "go"
  ],
  "severity": "Moderate",
  "comment": "Exported type 'GetGuildPruneCountResponse' should have a comment or be unexported",
  "detailsInfo": "Reports exported declarations without a documentation comment. According to [Doc Comments at golang.org](https://golang.org/wiki/CodeReviewComments#doc-comments), all top-level exported names should have doc comments.\n\nAlso, for more information about comment sentences, see [Comment\nSentences at golang.org](https://golang.org/wiki/CodeReviewComments#comment-sentences).\n\nTo add a comment, you can apply the **Add comment** quick-fix.",
  "sources": [
    {
      "type": "file",
      "path": "api/guild_endpoints.go",
      "language": "go",
      "line": 592,
      "offset": 6,
      "length": 26,
      "code": {
        "startLine": 590,
        "length": 26,
        "offset": 8,
        "surroundingCode": "}\n\ntype GetGuildPruneCountResponse struct {\n\tPruned *uint64 `json:\"pruned\"`\n}"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoExportedElementShouldHaveComment"
  },
  "hash": "e11cca41959adcac0dfeddcbf8a2ac7eca09f93436f4be23415628709e9e576f"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "Exported element should have a comment",
  "tags": [
    "go"
  ],
  "severity": "Moderate",
  "comment": "Exported type 'ModifyGroupDmJSON' should have a comment or be unexported",
  "detailsInfo": "Reports exported declarations without a documentation comment. According to [Doc Comments at golang.org](https://golang.org/wiki/CodeReviewComments#doc-comments), all top-level exported names should have doc comments.\n\nAlso, for more information about comment sentences, see [Comment\nSentences at golang.org](https://golang.org/wiki/CodeReviewComments#comment-sentences).\n\nTo add a comment, you can apply the **Add comment** quick-fix.",
  "sources": [
    {
      "type": "file",
      "path": "api/channel.go",
      "language": "go",
      "line": 442,
      "offset": 6,
      "length": 17,
      "code": {
        "startLine": 440,
        "length": 17,
        "offset": 8,
        "surroundingCode": "}\n\ntype ModifyGroupDmJSON struct {\n\tName string `json:\"name\"` // 1-100 character channel name\n\tIcon string `json:\"icon\"` // base64 encoded icon"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoExportedElementShouldHaveComment"
  },
  "hash": "a23abb1f799b67aae18429776e0e8be3fae931e102906df0a7b5e693fea380f2"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "Exported element should have a comment",
  "tags": [
    "go"
  ],
  "severity": "Moderate",
  "comment": "Exported method 'ModifyGuildTextChannel' should have a comment or be unexported",
  "detailsInfo": "Reports exported declarations without a documentation comment. According to [Doc Comments at golang.org](https://golang.org/wiki/CodeReviewComments#doc-comments), all top-level exported names should have doc comments.\n\nAlso, for more information about comment sentences, see [Comment\nSentences at golang.org](https://golang.org/wiki/CodeReviewComments#comment-sentences).\n\nTo add a comment, you can apply the **Add comment** quick-fix.",
  "sources": [
    {
      "type": "file",
      "path": "api/channel.go",
      "language": "go",
      "line": 447,
      "offset": 19,
      "length": 22,
      "code": {
        "startLine": 445,
        "length": 22,
        "offset": 21,
        "surroundingCode": "}\n\nfunc (c *Channel) ModifyGuildTextChannel(payload ModifyTextChannelJSON, reason *string) (*Channel, error) {\n\treturn c.modifyChannel(payload, reason)\n}"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoExportedElementShouldHaveComment"
  },
  "hash": "ab0718b651167c8dd17d9e49db0ddc009f655bacdcd2b4370ff4efa2c5d5189d"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "Exported element should have a comment",
  "tags": [
    "go"
  ],
  "severity": "Moderate",
  "comment": "Exported method 'ModifyGuildNewsChannel' should have a comment or be unexported",
  "detailsInfo": "Reports exported declarations without a documentation comment. According to [Doc Comments at golang.org](https://golang.org/wiki/CodeReviewComments#doc-comments), all top-level exported names should have doc comments.\n\nAlso, for more information about comment sentences, see [Comment\nSentences at golang.org](https://golang.org/wiki/CodeReviewComments#comment-sentences).\n\nTo add a comment, you can apply the **Add comment** quick-fix.",
  "sources": [
    {
      "type": "file",
      "path": "api/channel.go",
      "language": "go",
      "line": 451,
      "offset": 19,
      "length": 22,
      "code": {
        "startLine": 449,
        "length": 22,
        "offset": 21,
        "surroundingCode": "}\n\nfunc (c *Channel) ModifyGuildNewsChannel(payload ModifyNewsChannelJSON, reason *string) (*Channel, error) {\n\treturn c.modifyChannel(payload, reason)\n}"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoExportedElementShouldHaveComment"
  },
  "hash": "920e77bfeb916e419cd51c590d26cdec261934a9ae2a37bc92f6a54dc4d1c786"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "Exported element should have a comment",
  "tags": [
    "go"
  ],
  "severity": "Moderate",
  "comment": "Exported method 'ModifyThread' should have a comment or be unexported",
  "detailsInfo": "Reports exported declarations without a documentation comment. According to [Doc Comments at golang.org](https://golang.org/wiki/CodeReviewComments#doc-comments), all top-level exported names should have doc comments.\n\nAlso, for more information about comment sentences, see [Comment\nSentences at golang.org](https://golang.org/wiki/CodeReviewComments#comment-sentences).\n\nTo add a comment, you can apply the **Add comment** quick-fix.",
  "sources": [
    {
      "type": "file",
      "path": "api/channel.go",
      "language": "go",
      "line": 455,
      "offset": 19,
      "length": 12,
      "code": {
        "startLine": 453,
        "length": 12,
        "offset": 21,
        "surroundingCode": "}\n\nfunc (c *Channel) ModifyThread(payload ModifyThreadJSON, reason *string) (*Channel, error) {\n\treturn c.modifyChannel(payload, reason)\n}"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoExportedElementShouldHaveComment"
  },
  "hash": "b57429b138fea8a391edf4ea39e1c447a96e8951c0040bd6e99494489907cd99"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "Exported element should have a comment",
  "tags": [
    "go"
  ],
  "severity": "Moderate",
  "comment": "Exported method 'ModifyGuildVoiceChannel' should have a comment or be unexported",
  "detailsInfo": "Reports exported declarations without a documentation comment. According to [Doc Comments at golang.org](https://golang.org/wiki/CodeReviewComments#doc-comments), all top-level exported names should have doc comments.\n\nAlso, for more information about comment sentences, see [Comment\nSentences at golang.org](https://golang.org/wiki/CodeReviewComments#comment-sentences).\n\nTo add a comment, you can apply the **Add comment** quick-fix.",
  "sources": [
    {
      "type": "file",
      "path": "api/channel.go",
      "language": "go",
      "line": 459,
      "offset": 19,
      "length": 23,
      "code": {
        "startLine": 457,
        "length": 23,
        "offset": 21,
        "surroundingCode": "}\n\nfunc (c *Channel) ModifyGuildVoiceChannel(payload ModifyGuildVoiceChannelJSON, reason *string) (*Channel, error) {\n\treturn c.modifyChannel(payload, reason)\n}"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoExportedElementShouldHaveComment"
  },
  "hash": "e6d0bbe6cdc167d60a3064b95bd5363aed0f7999fb4f0c352501c9d8aa34edb4"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "Exported element should have a comment",
  "tags": [
    "go"
  ],
  "severity": "Moderate",
  "comment": "Exported type 'ModifyAllChannelJSON' should have a comment or be unexported",
  "detailsInfo": "Reports exported declarations without a documentation comment. According to [Doc Comments at golang.org](https://golang.org/wiki/CodeReviewComments#doc-comments), all top-level exported names should have doc comments.\n\nAlso, for more information about comment sentences, see [Comment\nSentences at golang.org](https://golang.org/wiki/CodeReviewComments#comment-sentences).\n\nTo add a comment, you can apply the **Add comment** quick-fix.",
  "sources": [
    {
      "type": "file",
      "path": "api/channel.go",
      "language": "go",
      "line": 463,
      "offset": 6,
      "length": 20,
      "code": {
        "startLine": 461,
        "length": 20,
        "offset": 8,
        "surroundingCode": "}\n\ntype ModifyAllChannelJSON struct {\n\tName                 string      `json:\"name\"`                  // 1-100 character channel name\n\tPosition             *int        `json:\"position\"`              // the position of the channel in the left-hand listing"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoExportedElementShouldHaveComment"
  },
  "hash": "838c6eb252d6a99e76bcececd47832c19440221b3647cef2e5cc4cab2e8e495a"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "Exported element should have a comment",
  "tags": [
    "go"
  ],
  "severity": "Moderate",
  "comment": "Exported type 'ModifyNewsChannelJSON' should have a comment or be unexported",
  "detailsInfo": "Reports exported declarations without a documentation comment. According to [Doc Comments at golang.org](https://golang.org/wiki/CodeReviewComments#doc-comments), all top-level exported names should have doc comments.\n\nAlso, for more information about comment sentences, see [Comment\nSentences at golang.org](https://golang.org/wiki/CodeReviewComments#comment-sentences).\n\nTo add a comment, you can apply the **Add comment** quick-fix.",
  "sources": [
    {
      "type": "file",
      "path": "api/channel.go",
      "language": "go",
      "line": 469,
      "offset": 6,
      "length": 21,
      "code": {
        "startLine": 467,
        "length": 21,
        "offset": 8,
        "surroundingCode": "}\n\ntype ModifyNewsChannelJSON struct {\n\tModifyAllChannelJSON\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoExportedElementShouldHaveComment"
  },
  "hash": "04ce4408bdd95f6a1ca46364fab16a7325ab01d9c3c47c3ee53b48ac3b5e93ad"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "Exported element should have a comment",
  "tags": [
    "go"
  ],
  "severity": "Moderate",
  "comment": "Exported type 'ModifyTextChannelJSON' should have a comment or be unexported",
  "detailsInfo": "Reports exported declarations without a documentation comment. According to [Doc Comments at golang.org](https://golang.org/wiki/CodeReviewComments#doc-comments), all top-level exported names should have doc comments.\n\nAlso, for more information about comment sentences, see [Comment\nSentences at golang.org](https://golang.org/wiki/CodeReviewComments#comment-sentences).\n\nTo add a comment, you can apply the **Add comment** quick-fix.",
  "sources": [
    {
      "type": "file",
      "path": "api/channel.go",
      "language": "go",
      "line": 479,
      "offset": 6,
      "length": 21,
      "code": {
        "startLine": 477,
        "length": 21,
        "offset": 8,
        "surroundingCode": "}\n\ntype ModifyTextChannelJSON struct {\n\tModifyNewsChannelJSON\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoExportedElementShouldHaveComment"
  },
  "hash": "4a540061fde2cd3a4fa84c1deaa5ac4160d40d2558e7d691f4c4210473840d66"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "Exported element should have a comment",
  "tags": [
    "go"
  ],
  "severity": "Moderate",
  "comment": "Exported type 'ModifyGuildVoiceChannelJSON' should have a comment or be unexported",
  "detailsInfo": "Reports exported declarations without a documentation comment. According to [Doc Comments at golang.org](https://golang.org/wiki/CodeReviewComments#doc-comments), all top-level exported names should have doc comments.\n\nAlso, for more information about comment sentences, see [Comment\nSentences at golang.org](https://golang.org/wiki/CodeReviewComments#comment-sentences).\n\nTo add a comment, you can apply the **Add comment** quick-fix.",
  "sources": [
    {
      "type": "file",
      "path": "api/channel.go",
      "language": "go",
      "line": 485,
      "offset": 6,
      "length": 27,
      "code": {
        "startLine": 483,
        "length": 27,
        "offset": 8,
        "surroundingCode": "}\n\ntype ModifyGuildVoiceChannelJSON struct {\n\tModifyAllChannelJSON\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoExportedElementShouldHaveComment"
  },
  "hash": "5b9d1676fa8d2541226a08b08ea3f62eaa1313d09b65de9de66e0ec76cf7f2b8"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "Exported element should have a comment",
  "tags": [
    "go"
  ],
  "severity": "Moderate",
  "comment": "Exported type 'ThreadListResponse' should have a comment or be unexported",
  "detailsInfo": "Reports exported declarations without a documentation comment. According to [Doc Comments at golang.org](https://golang.org/wiki/CodeReviewComments#doc-comments), all top-level exported names should have doc comments.\n\nAlso, for more information about comment sentences, see [Comment\nSentences at golang.org](https://golang.org/wiki/CodeReviewComments#comment-sentences).\n\nTo add a comment, you can apply the **Add comment** quick-fix.",
  "sources": [
    {
      "type": "file",
      "path": "api/channel.go",
      "language": "go",
      "line": 1271,
      "offset": 6,
      "length": 18,
      "code": {
        "startLine": 1269,
        "length": 18,
        "offset": 8,
        "surroundingCode": "}\n\ntype ThreadListResponse struct {\n\tThreads []Channel      `json:\"threads\"`            // the archived threads\n\tMembers []ThreadMember `json:\"members\"`            // a thread member object for each returned thread the current user has joined"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoExportedElementShouldHaveComment"
  },
  "hash": "a1b2608f4a5c42e9d3d372e36c76b0e3f11e43365be95d3ad72d412691e1c5ae"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "Exported element should have a comment",
  "tags": [
    "go"
  ],
  "severity": "Moderate",
  "comment": "Exported method 'CreateGuildTemplate' should have a comment or be unexported",
  "detailsInfo": "Reports exported declarations without a documentation comment. According to [Doc Comments at golang.org](https://golang.org/wiki/CodeReviewComments#doc-comments), all top-level exported names should have doc comments.\n\nAlso, for more information about comment sentences, see [Comment\nSentences at golang.org](https://golang.org/wiki/CodeReviewComments#comment-sentences).\n\nTo add a comment, you can apply the **Add comment** quick-fix.",
  "sources": [
    {
      "type": "file",
      "path": "api/guild_template_endpoints.go",
      "language": "go",
      "line": 66,
      "offset": 17,
      "length": 19,
      "code": {
        "startLine": 64,
        "length": 19,
        "offset": 19,
        "surroundingCode": "}\n\nfunc (g *Guild) CreateGuildTemplate(payload *CreateGuildTemplateJSON) (*GuildTemplate, error) {\n\tu := parseRoute(fmt.Sprintf(createGuildTemplate, api, g.ID.String()))\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoExportedElementShouldHaveComment"
  },
  "hash": "7e64b25d894f1a0bd076dd3142dd0867b626d7e2ba7adbf55535d9c373d3ad3c"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "Exported element should have a comment",
  "tags": [
    "go"
  ],
  "severity": "Moderate",
  "comment": "Exported type 'ModifyGuildTemplateJSON' should have a comment or be unexported",
  "detailsInfo": "Reports exported declarations without a documentation comment. According to [Doc Comments at golang.org](https://golang.org/wiki/CodeReviewComments#doc-comments), all top-level exported names should have doc comments.\n\nAlso, for more information about comment sentences, see [Comment\nSentences at golang.org](https://golang.org/wiki/CodeReviewComments#comment-sentences).\n\nTo add a comment, you can apply the **Add comment** quick-fix.",
  "sources": [
    {
      "type": "file",
      "path": "api/guild_template_endpoints.go",
      "language": "go",
      "line": 107,
      "offset": 6,
      "length": 23,
      "code": {
        "startLine": 105,
        "length": 23,
        "offset": 8,
        "surroundingCode": "}\n\ntype ModifyGuildTemplateJSON struct {\n\tCreateGuildTemplateJSON\n}"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoExportedElementShouldHaveComment"
  },
  "hash": "51458d79bee3698bbf74b56fafdee376bd6657255a5ca6391367716d97665941"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Deprecated element",
  "tags": [
    "go"
  ],
  "severity": "High",
  "comment": "'Component' is deprecated",
  "detailsInfo": "Reports usages of deprecated elements.\n\nExample:\n\n    // Deprecated: Use io.SeekStart, io.SeekCurrent, and io.SeekEnd.\n    const (\n     SEEK_SET int = 0 // seek relative to the origin of the file\n     SEEK_CUR int = 1 // seek relative to the current offset\n     SEEK_END int = 2 // seek relative to the end\n    )\n\nAccording to [Constants at golang.org](https://golang.org/pkg/os/#pkg-constants), `SEEK_SET`, `SEEK_CUR`,\nand `SEEK_END` are deprecated.",
  "sources": [
    {
      "type": "file",
      "path": "api/channel.go",
      "language": "go",
      "line": 138,
      "offset": 22,
      "length": 9,
      "code": {
        "startLine": 136,
        "length": 9,
        "offset": 307,
        "surroundingCode": "\tInteraction       MessageInteraction `json:\"interaction,omitempty\"`        // sent if the message is a response to an Interaction\n\tThread            Channel            `json:\"thread,omitempty\"`             // the thread that was started from this message, includes ThreadMember object\n\tComponents        []Component        `json:\"components,omitempty\"`         // sent if the message contains components like buttons, action rows, or other interactive components\n\tStickerItems      []string           `json:\"sticker_items,omitempty\"`      // sent if the message contains stickers\n\tStickers          []string           `json:\"stickers,omitempty\"`           // Deprecated: the stickers sent with the message"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoDeprecation"
  },
  "hash": "b8693c267292fa8244323c7e40083034b57091073d3a2f7f2718e15b1defb8ce"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Deprecated element",
  "tags": [
    "go"
  ],
  "severity": "High",
  "comment": "'Component' is deprecated",
  "detailsInfo": "Reports usages of deprecated elements.\n\nExample:\n\n    // Deprecated: Use io.SeekStart, io.SeekCurrent, and io.SeekEnd.\n    const (\n     SEEK_SET int = 0 // seek relative to the origin of the file\n     SEEK_CUR int = 1 // seek relative to the current offset\n     SEEK_END int = 2 // seek relative to the end\n    )\n\nAccording to [Constants at golang.org](https://golang.org/pkg/os/#pkg-constants), `SEEK_SET`, `SEEK_CUR`,\nand `SEEK_END` are deprecated.",
  "sources": [
    {
      "type": "file",
      "path": "api/channel.go",
      "language": "go",
      "line": 645,
      "offset": 21,
      "length": 9,
      "code": {
        "startLine": 643,
        "length": 9,
        "offset": 220,
        "surroundingCode": "\tAllowedMentions  AllowedMentions  `json:\"allowed_mentions\"`  // allowed mentions for the message\n\tMessageReference MessageReference `json:\"message_reference\"` // include to make your message a reply\n\tComponents       []Component      `json:\"components\"`        // the components to include with the message\n\tStickerIDs       []Snowflake      `json:\"sticker_ids\"`       // IDs of up to 3 stickers in the server to send in the message\n\tPayloadJson      string           `json:\"payload_json\"`      // JSON encoded body of non-file params"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoDeprecation"
  },
  "hash": "fe1ee09ceae9587d1d533cc135b2f7fe3b0c953441e1fa5bfa52b958bfee8405"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Deprecated element",
  "tags": [
    "go"
  ],
  "severity": "High",
  "comment": "'Component' is deprecated",
  "detailsInfo": "Reports usages of deprecated elements.\n\nExample:\n\n    // Deprecated: Use io.SeekStart, io.SeekCurrent, and io.SeekEnd.\n    const (\n     SEEK_SET int = 0 // seek relative to the origin of the file\n     SEEK_CUR int = 1 // seek relative to the current offset\n     SEEK_END int = 2 // seek relative to the end\n    )\n\nAccording to [Constants at golang.org](https://golang.org/pkg/os/#pkg-constants), `SEEK_SET`, `SEEK_CUR`,\nand `SEEK_END` are deprecated.",
  "sources": [
    {
      "type": "file",
      "path": "api/channel.go",
      "language": "go",
      "line": 816,
      "offset": 21,
      "length": 9,
      "code": {
        "startLine": 814,
        "length": 9,
        "offset": 149,
        "surroundingCode": "\tFlags           *int             `json:\"flags,omitempty\"`\n\tAllowedMentions *AllowedMentions `json:\"allowed_mentions,omitempty\"`\n\tComponents      []*Component     `json:\"components,omitempty\"`\n\tPayloadJson     *string          `json:\"payload_json,omitempty\"`\n\tAttachments     []*Attachment    `json:\"attachments,omitempty\"`"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoDeprecation"
  },
  "hash": "3a209c58e3a4d96494444ac8230440d6c7472874887bbceea308424214cd5125"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Deprecated element",
  "tags": [
    "go"
  ],
  "severity": "High",
  "comment": "'Component' is deprecated",
  "detailsInfo": "Reports usages of deprecated elements.\n\nExample:\n\n    // Deprecated: Use io.SeekStart, io.SeekCurrent, and io.SeekEnd.\n    const (\n     SEEK_SET int = 0 // seek relative to the origin of the file\n     SEEK_CUR int = 1 // seek relative to the current offset\n     SEEK_END int = 2 // seek relative to the end\n    )\n\nAccording to [Constants at golang.org](https://golang.org/pkg/os/#pkg-constants), `SEEK_SET`, `SEEK_CUR`,\nand `SEEK_END` are deprecated.",
  "sources": [
    {
      "type": "file",
      "path": "api/channel.go",
      "language": "go",
      "line": 1157,
      "offset": 20,
      "length": 9,
      "code": {
        "startLine": 1155,
        "length": 9,
        "offset": 222,
        "surroundingCode": "\tEmbeds          []Embed         `json:\"embeds\"`           // embedded rich content (up to 6000 characters)\n\tAllowedMentions AllowedMentions `json:\"allowed_mentions\"` // allowed mentions for the message\n\tComponents      []Component     `json:\"components\"`       // the components to include with the message\n\tStickerIDs      []Snowflake     `json:\"sticker_ids\"`      // IDs of up to 3 stickers in the server to send in the message\n\tPayloadJson     string          `json:\"payload_json\"`     // JSON encoded body of non-file params"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoDeprecation"
  },
  "hash": "6905289edf46c48be93d8cf23095c35006a5d705effb7ef0b1d39b29aaa3577e"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Deprecated element",
  "tags": [
    "go"
  ],
  "severity": "High",
  "comment": "'Component' is deprecated",
  "detailsInfo": "Reports usages of deprecated elements.\n\nExample:\n\n    // Deprecated: Use io.SeekStart, io.SeekCurrent, and io.SeekEnd.\n    const (\n     SEEK_SET int = 0 // seek relative to the origin of the file\n     SEEK_CUR int = 1 // seek relative to the current offset\n     SEEK_END int = 2 // seek relative to the end\n    )\n\nAccording to [Constants at golang.org](https://golang.org/pkg/os/#pkg-constants), `SEEK_SET`, `SEEK_CUR`,\nand `SEEK_END` are deprecated.",
  "sources": [
    {
      "type": "file",
      "path": "api/message_components_api.go",
      "language": "go",
      "line": 20,
      "offset": 22,
      "length": 9,
      "code": {
        "startLine": 18,
        "length": 9,
        "offset": 62,
        "surroundingCode": "\n// NewComponent - Build a new Component\nfunc NewComponent() *Component {\n\treturn &Component{}\n}"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoDeprecation"
  },
  "hash": "33ac76c0302b1c3986367dbca2e7bbdee3a3e720329063a6338c034e6927e3f6"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Deprecated element",
  "tags": [
    "go"
  ],
  "severity": "High",
  "comment": "'Component' is deprecated",
  "detailsInfo": "Reports usages of deprecated elements.\n\nExample:\n\n    // Deprecated: Use io.SeekStart, io.SeekCurrent, and io.SeekEnd.\n    const (\n     SEEK_SET int = 0 // seek relative to the origin of the file\n     SEEK_CUR int = 1 // seek relative to the current offset\n     SEEK_END int = 2 // seek relative to the end\n    )\n\nAccording to [Constants at golang.org](https://golang.org/pkg/os/#pkg-constants), `SEEK_SET`, `SEEK_CUR`,\nand `SEEK_END` are deprecated.",
  "sources": [
    {
      "type": "file",
      "path": "api/message_components_api.go",
      "language": "go",
      "line": 21,
      "offset": 10,
      "length": 9,
      "code": {
        "startLine": 19,
        "length": 9,
        "offset": 82,
        "surroundingCode": "// NewComponent - Build a new Component\nfunc NewComponent() *Component {\n\treturn &Component{}\n}\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoDeprecation"
  },
  "hash": "4cca40adec6b5190fb055d049369903f1941d7922c1d3fa7d94e7659e0180b79"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Deprecated element",
  "tags": [
    "go"
  ],
  "severity": "High",
  "comment": "'Component' is deprecated",
  "detailsInfo": "Reports usages of deprecated elements.\n\nExample:\n\n    // Deprecated: Use io.SeekStart, io.SeekCurrent, and io.SeekEnd.\n    const (\n     SEEK_SET int = 0 // seek relative to the origin of the file\n     SEEK_CUR int = 1 // seek relative to the current offset\n     SEEK_END int = 2 // seek relative to the end\n    )\n\nAccording to [Constants at golang.org](https://golang.org/pkg/os/#pkg-constants), `SEEK_SET`, `SEEK_CUR`,\nand `SEEK_END` are deprecated.",
  "sources": [
    {
      "type": "file",
      "path": "api/message_components_api.go",
      "language": "go",
      "line": 25,
      "offset": 10,
      "length": 9,
      "code": {
        "startLine": 23,
        "length": 9,
        "offset": 47,
        "surroundingCode": "\n// SetType - sets the Component type\nfunc (c *Component) SetType(t ComponentType) *Component {\n\tc.Type = t\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoDeprecation"
  },
  "hash": "f199d2ffdf9f7dbdf709f9591fa855b708002190ed60695922a6b112d495b3cc"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Deprecated element",
  "tags": [
    "go"
  ],
  "severity": "High",
  "comment": "'Component' is deprecated",
  "detailsInfo": "Reports usages of deprecated elements.\n\nExample:\n\n    // Deprecated: Use io.SeekStart, io.SeekCurrent, and io.SeekEnd.\n    const (\n     SEEK_SET int = 0 // seek relative to the origin of the file\n     SEEK_CUR int = 1 // seek relative to the current offset\n     SEEK_END int = 2 // seek relative to the end\n    )\n\nAccording to [Constants at golang.org](https://golang.org/pkg/os/#pkg-constants), `SEEK_SET`, `SEEK_CUR`,\nand `SEEK_END` are deprecated.",
  "sources": [
    {
      "type": "file",
      "path": "api/message_components_api.go",
      "language": "go",
      "line": 25,
      "offset": 47,
      "length": 9,
      "code": {
        "startLine": 23,
        "length": 9,
        "offset": 84,
        "surroundingCode": "\n// SetType - sets the Component type\nfunc (c *Component) SetType(t ComponentType) *Component {\n\tc.Type = t\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoDeprecation"
  },
  "hash": "d0c11f9e11cfd846d50142bf720b0ea292e5c893be7429e225ab3c27ab87b29d"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Deprecated element",
  "tags": [
    "go"
  ],
  "severity": "High",
  "comment": "'Component' is deprecated",
  "detailsInfo": "Reports usages of deprecated elements.\n\nExample:\n\n    // Deprecated: Use io.SeekStart, io.SeekCurrent, and io.SeekEnd.\n    const (\n     SEEK_SET int = 0 // seek relative to the origin of the file\n     SEEK_CUR int = 1 // seek relative to the current offset\n     SEEK_END int = 2 // seek relative to the end\n    )\n\nAccording to [Constants at golang.org](https://golang.org/pkg/os/#pkg-constants), `SEEK_SET`, `SEEK_CUR`,\nand `SEEK_END` are deprecated.",
  "sources": [
    {
      "type": "file",
      "path": "api/message_components_api.go",
      "language": "go",
      "line": 32,
      "offset": 10,
      "length": 9,
      "code": {
        "startLine": 30,
        "length": 9,
        "offset": 62,
        "surroundingCode": "\n// SetCustomID - sets the CustomID of the component\nfunc (c *Component) SetCustomID(t string) *Component {\n\tc.CustomID = t\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoDeprecation"
  },
  "hash": "dda4e25d97fd49535ecc42d01cbca799ebc458fe1e40f5c5218762a2be62ad6b"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Deprecated element",
  "tags": [
    "go"
  ],
  "severity": "High",
  "comment": "'Component' is deprecated",
  "detailsInfo": "Reports usages of deprecated elements.\n\nExample:\n\n    // Deprecated: Use io.SeekStart, io.SeekCurrent, and io.SeekEnd.\n    const (\n     SEEK_SET int = 0 // seek relative to the origin of the file\n     SEEK_CUR int = 1 // seek relative to the current offset\n     SEEK_END int = 2 // seek relative to the end\n    )\n\nAccording to [Constants at golang.org](https://golang.org/pkg/os/#pkg-constants), `SEEK_SET`, `SEEK_CUR`,\nand `SEEK_END` are deprecated.",
  "sources": [
    {
      "type": "file",
      "path": "api/message_components_api.go",
      "language": "go",
      "line": 32,
      "offset": 44,
      "length": 9,
      "code": {
        "startLine": 30,
        "length": 9,
        "offset": 96,
        "surroundingCode": "\n// SetCustomID - sets the CustomID of the component\nfunc (c *Component) SetCustomID(t string) *Component {\n\tc.CustomID = t\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoDeprecation"
  },
  "hash": "cfd57f436ded7d1d952f5725f158f105287aeb6846d54bdb09361aaf928afd4f"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Deprecated element",
  "tags": [
    "go"
  ],
  "severity": "High",
  "comment": "'Component' is deprecated",
  "detailsInfo": "Reports usages of deprecated elements.\n\nExample:\n\n    // Deprecated: Use io.SeekStart, io.SeekCurrent, and io.SeekEnd.\n    const (\n     SEEK_SET int = 0 // seek relative to the origin of the file\n     SEEK_CUR int = 1 // seek relative to the current offset\n     SEEK_END int = 2 // seek relative to the end\n    )\n\nAccording to [Constants at golang.org](https://golang.org/pkg/os/#pkg-constants), `SEEK_SET`, `SEEK_CUR`,\nand `SEEK_END` are deprecated.",
  "sources": [
    {
      "type": "file",
      "path": "api/message_components_api.go",
      "language": "go",
      "line": 39,
      "offset": 10,
      "length": 9,
      "code": {
        "startLine": 37,
        "length": 9,
        "offset": 52,
        "surroundingCode": "\n// IsDisabled - is the Component disabled\nfunc (c *Component) IsDisabled() bool {\n\treturn c.Disabled\n}"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoDeprecation"
  },
  "hash": "595588552a553d5ce36c7e27f840a321e9b774e8b9f565d8d9f423d77fa60271"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Deprecated element",
  "tags": [
    "go"
  ],
  "severity": "High",
  "comment": "'Component' is deprecated",
  "detailsInfo": "Reports usages of deprecated elements.\n\nExample:\n\n    // Deprecated: Use io.SeekStart, io.SeekCurrent, and io.SeekEnd.\n    const (\n     SEEK_SET int = 0 // seek relative to the origin of the file\n     SEEK_CUR int = 1 // seek relative to the current offset\n     SEEK_END int = 2 // seek relative to the end\n    )\n\nAccording to [Constants at golang.org](https://golang.org/pkg/os/#pkg-constants), `SEEK_SET`, `SEEK_CUR`,\nand `SEEK_END` are deprecated.",
  "sources": [
    {
      "type": "file",
      "path": "api/message_components_api.go",
      "language": "go",
      "line": 44,
      "offset": 10,
      "length": 9,
      "code": {
        "startLine": 42,
        "length": 9,
        "offset": 68,
        "surroundingCode": "\n// SetDisabled - sets the Disabled state of the Component\nfunc (c *Component) SetDisabled(d bool) *Component {\n\tc.Disabled = d\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoDeprecation"
  },
  "hash": "299966cae1fc610e88bfd9e8df87ac28c2b53834a3e4ca242f83fb88e3c3ae4d"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Deprecated element",
  "tags": [
    "go"
  ],
  "severity": "High",
  "comment": "'Component' is deprecated",
  "detailsInfo": "Reports usages of deprecated elements.\n\nExample:\n\n    // Deprecated: Use io.SeekStart, io.SeekCurrent, and io.SeekEnd.\n    const (\n     SEEK_SET int = 0 // seek relative to the origin of the file\n     SEEK_CUR int = 1 // seek relative to the current offset\n     SEEK_END int = 2 // seek relative to the end\n    )\n\nAccording to [Constants at golang.org](https://golang.org/pkg/os/#pkg-constants), `SEEK_SET`, `SEEK_CUR`,\nand `SEEK_END` are deprecated.",
  "sources": [
    {
      "type": "file",
      "path": "api/message_components_api.go",
      "language": "go",
      "line": 44,
      "offset": 42,
      "length": 9,
      "code": {
        "startLine": 42,
        "length": 9,
        "offset": 100,
        "surroundingCode": "\n// SetDisabled - sets the Disabled state of the Component\nfunc (c *Component) SetDisabled(d bool) *Component {\n\tc.Disabled = d\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoDeprecation"
  },
  "hash": "8583ec9b9bdaab8e0ca03fdedd5324c484829d62be4c4266853808632610d25a"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Deprecated element",
  "tags": [
    "go"
  ],
  "severity": "High",
  "comment": "'Component' is deprecated",
  "detailsInfo": "Reports usages of deprecated elements.\n\nExample:\n\n    // Deprecated: Use io.SeekStart, io.SeekCurrent, and io.SeekEnd.\n    const (\n     SEEK_SET int = 0 // seek relative to the origin of the file\n     SEEK_CUR int = 1 // seek relative to the current offset\n     SEEK_END int = 2 // seek relative to the end\n    )\n\nAccording to [Constants at golang.org](https://golang.org/pkg/os/#pkg-constants), `SEEK_SET`, `SEEK_CUR`,\nand `SEEK_END` are deprecated.",
  "sources": [
    {
      "type": "file",
      "path": "api/message_components_api.go",
      "language": "go",
      "line": 51,
      "offset": 10,
      "length": 9,
      "code": {
        "startLine": 49,
        "length": 9,
        "offset": 59,
        "surroundingCode": "\n// SetButtonStyle - sets the style of the Button\nfunc (c *Component) SetButtonStyle(s ButtonStyle) *Component {\n\tc.Style = s\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoDeprecation"
  },
  "hash": "48e8ea97d7f09c72f91eb65a88baee7e193f2ab6e0551ee39786df6db8284344"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Deprecated element",
  "tags": [
    "go"
  ],
  "severity": "High",
  "comment": "'Component' is deprecated",
  "detailsInfo": "Reports usages of deprecated elements.\n\nExample:\n\n    // Deprecated: Use io.SeekStart, io.SeekCurrent, and io.SeekEnd.\n    const (\n     SEEK_SET int = 0 // seek relative to the origin of the file\n     SEEK_CUR int = 1 // seek relative to the current offset\n     SEEK_END int = 2 // seek relative to the end\n    )\n\nAccording to [Constants at golang.org](https://golang.org/pkg/os/#pkg-constants), `SEEK_SET`, `SEEK_CUR`,\nand `SEEK_END` are deprecated.",
  "sources": [
    {
      "type": "file",
      "path": "api/message_components_api.go",
      "language": "go",
      "line": 51,
      "offset": 52,
      "length": 9,
      "code": {
        "startLine": 49,
        "length": 9,
        "offset": 101,
        "surroundingCode": "\n// SetButtonStyle - sets the style of the Button\nfunc (c *Component) SetButtonStyle(s ButtonStyle) *Component {\n\tc.Style = s\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoDeprecation"
  },
  "hash": "10a29fd5ffa092664a859afbc480acb3a79f2889f8c3fc0be1b0f7628afe85df"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Deprecated element",
  "tags": [
    "go"
  ],
  "severity": "High",
  "comment": "'Component' is deprecated",
  "detailsInfo": "Reports usages of deprecated elements.\n\nExample:\n\n    // Deprecated: Use io.SeekStart, io.SeekCurrent, and io.SeekEnd.\n    const (\n     SEEK_SET int = 0 // seek relative to the origin of the file\n     SEEK_CUR int = 1 // seek relative to the current offset\n     SEEK_END int = 2 // seek relative to the end\n    )\n\nAccording to [Constants at golang.org](https://golang.org/pkg/os/#pkg-constants), `SEEK_SET`, `SEEK_CUR`,\nand `SEEK_END` are deprecated.",
  "sources": [
    {
      "type": "file",
      "path": "api/message_components_api.go",
      "language": "go",
      "line": 58,
      "offset": 10,
      "length": 9,
      "code": {
        "startLine": 56,
        "length": 9,
        "offset": 65,
        "surroundingCode": "\n// SetTextInputStyle - sets the style of the TextInput\nfunc (c *Component) SetTextInputStyle(s TextInputStyle) *Component {\n\tc.Style = s\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoDeprecation"
  },
  "hash": "a4477453b36ff513ab95ca82d4a76f24e4be5a5494a942340a0b9ffdbff457c7"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Deprecated element",
  "tags": [
    "go"
  ],
  "severity": "High",
  "comment": "'Component' is deprecated",
  "detailsInfo": "Reports usages of deprecated elements.\n\nExample:\n\n    // Deprecated: Use io.SeekStart, io.SeekCurrent, and io.SeekEnd.\n    const (\n     SEEK_SET int = 0 // seek relative to the origin of the file\n     SEEK_CUR int = 1 // seek relative to the current offset\n     SEEK_END int = 2 // seek relative to the end\n    )\n\nAccording to [Constants at golang.org](https://golang.org/pkg/os/#pkg-constants), `SEEK_SET`, `SEEK_CUR`,\nand `SEEK_END` are deprecated.",
  "sources": [
    {
      "type": "file",
      "path": "api/message_components_api.go",
      "language": "go",
      "line": 58,
      "offset": 58,
      "length": 9,
      "code": {
        "startLine": 56,
        "length": 9,
        "offset": 113,
        "surroundingCode": "\n// SetTextInputStyle - sets the style of the TextInput\nfunc (c *Component) SetTextInputStyle(s TextInputStyle) *Component {\n\tc.Style = s\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoDeprecation"
  },
  "hash": "d19f89fae2e31ff029d903ccbf355b3a9ae8d6c94e1b1e6cb43e1f6310518627"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Deprecated element",
  "tags": [
    "go"
  ],
  "severity": "High",
  "comment": "'Component' is deprecated",
  "detailsInfo": "Reports usages of deprecated elements.\n\nExample:\n\n    // Deprecated: Use io.SeekStart, io.SeekCurrent, and io.SeekEnd.\n    const (\n     SEEK_SET int = 0 // seek relative to the origin of the file\n     SEEK_CUR int = 1 // seek relative to the current offset\n     SEEK_END int = 2 // seek relative to the end\n    )\n\nAccording to [Constants at golang.org](https://golang.org/pkg/os/#pkg-constants), `SEEK_SET`, `SEEK_CUR`,\nand `SEEK_END` are deprecated.",
  "sources": [
    {
      "type": "file",
      "path": "api/message_components_api.go",
      "language": "go",
      "line": 65,
      "offset": 10,
      "length": 9,
      "code": {
        "startLine": 63,
        "length": 9,
        "offset": 54,
        "surroundingCode": "\n// SetEmoji - sets the Emoji for the Button\nfunc (c *Component) SetEmoji(e *Emoji) *Component {\n\tc.Emoji = e\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoDeprecation"
  },
  "hash": "49f4aad32c97b54ee39fd9beaa1c9f5ffb8e257b507402788d42d156d14a84ea"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Deprecated element",
  "tags": [
    "go"
  ],
  "severity": "High",
  "comment": "'Component' is deprecated",
  "detailsInfo": "Reports usages of deprecated elements.\n\nExample:\n\n    // Deprecated: Use io.SeekStart, io.SeekCurrent, and io.SeekEnd.\n    const (\n     SEEK_SET int = 0 // seek relative to the origin of the file\n     SEEK_CUR int = 1 // seek relative to the current offset\n     SEEK_END int = 2 // seek relative to the end\n    )\n\nAccording to [Constants at golang.org](https://golang.org/pkg/os/#pkg-constants), `SEEK_SET`, `SEEK_CUR`,\nand `SEEK_END` are deprecated.",
  "sources": [
    {
      "type": "file",
      "path": "api/message_components_api.go",
      "language": "go",
      "line": 65,
      "offset": 41,
      "length": 9,
      "code": {
        "startLine": 63,
        "length": 9,
        "offset": 85,
        "surroundingCode": "\n// SetEmoji - sets the Emoji for the Button\nfunc (c *Component) SetEmoji(e *Emoji) *Component {\n\tc.Emoji = e\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoDeprecation"
  },
  "hash": "5e9ea216ae4b1954946ddfa39c56b408434c855f9e142685545995cb3e9ad0c8"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Deprecated element",
  "tags": [
    "go"
  ],
  "severity": "High",
  "comment": "'Component' is deprecated",
  "detailsInfo": "Reports usages of deprecated elements.\n\nExample:\n\n    // Deprecated: Use io.SeekStart, io.SeekCurrent, and io.SeekEnd.\n    const (\n     SEEK_SET int = 0 // seek relative to the origin of the file\n     SEEK_CUR int = 1 // seek relative to the current offset\n     SEEK_END int = 2 // seek relative to the end\n    )\n\nAccording to [Constants at golang.org](https://golang.org/pkg/os/#pkg-constants), `SEEK_SET`, `SEEK_CUR`,\nand `SEEK_END` are deprecated.",
  "sources": [
    {
      "type": "file",
      "path": "api/message_components_api.go",
      "language": "go",
      "line": 72,
      "offset": 10,
      "length": 9,
      "code": {
        "startLine": 70,
        "length": 9,
        "offset": 50,
        "surroundingCode": "\n// SetURL - sets the URL for the Button\nfunc (c *Component) SetURL(u string) *Component {\n\tc.URL = u\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoDeprecation"
  },
  "hash": "8a62729ec8bf9c9ec6a6bc152e0f965a2be49ac30cc9eaf0217b8356abe4249e"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Deprecated element",
  "tags": [
    "go"
  ],
  "severity": "High",
  "comment": "'Component' is deprecated",
  "detailsInfo": "Reports usages of deprecated elements.\n\nExample:\n\n    // Deprecated: Use io.SeekStart, io.SeekCurrent, and io.SeekEnd.\n    const (\n     SEEK_SET int = 0 // seek relative to the origin of the file\n     SEEK_CUR int = 1 // seek relative to the current offset\n     SEEK_END int = 2 // seek relative to the end\n    )\n\nAccording to [Constants at golang.org](https://golang.org/pkg/os/#pkg-constants), `SEEK_SET`, `SEEK_CUR`,\nand `SEEK_END` are deprecated.",
  "sources": [
    {
      "type": "file",
      "path": "api/message_components_api.go",
      "language": "go",
      "line": 72,
      "offset": 39,
      "length": 9,
      "code": {
        "startLine": 70,
        "length": 9,
        "offset": 79,
        "surroundingCode": "\n// SetURL - sets the URL for the Button\nfunc (c *Component) SetURL(u string) *Component {\n\tc.URL = u\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoDeprecation"
  },
  "hash": "adb9efa82d9d0737187468802480548c6d92fedbd4d692dfa633819e14930c5d"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Deprecated element",
  "tags": [
    "go"
  ],
  "severity": "High",
  "comment": "'Component' is deprecated",
  "detailsInfo": "Reports usages of deprecated elements.\n\nExample:\n\n    // Deprecated: Use io.SeekStart, io.SeekCurrent, and io.SeekEnd.\n    const (\n     SEEK_SET int = 0 // seek relative to the origin of the file\n     SEEK_CUR int = 1 // seek relative to the current offset\n     SEEK_END int = 2 // seek relative to the end\n    )\n\nAccording to [Constants at golang.org](https://golang.org/pkg/os/#pkg-constants), `SEEK_SET`, `SEEK_CUR`,\nand `SEEK_END` are deprecated.",
  "sources": [
    {
      "type": "file",
      "path": "api/message_components_api.go",
      "language": "go",
      "line": 103,
      "offset": 52,
      "length": 9,
      "code": {
        "startLine": 101,
        "length": 9,
        "offset": 126,
        "surroundingCode": "\n// AddComponent - adds a single Component to the InteractionResponseModal\nfunc (i *InteractionResponseModal) AddComponent(c *Component) *InteractionResponseModal {\n\ti.Data.Components = append(i.Data.Components, *c)\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoDeprecation"
  },
  "hash": "065502b8a8f8020d9f44d37e5af8fb11414a45987d546f0e3a276dbe64ca8055"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Deprecated element",
  "tags": [
    "go"
  ],
  "severity": "High",
  "comment": "'Component' is deprecated",
  "detailsInfo": "Reports usages of deprecated elements.\n\nExample:\n\n    // Deprecated: Use io.SeekStart, io.SeekCurrent, and io.SeekEnd.\n    const (\n     SEEK_SET int = 0 // seek relative to the origin of the file\n     SEEK_CUR int = 1 // seek relative to the current offset\n     SEEK_END int = 2 // seek relative to the end\n    )\n\nAccording to [Constants at golang.org](https://golang.org/pkg/os/#pkg-constants), `SEEK_SET`, `SEEK_CUR`,\nand `SEEK_END` are deprecated.",
  "sources": [
    {
      "type": "file",
      "path": "api/message_components_api.go",
      "language": "go",
      "line": 172,
      "offset": 55,
      "length": 9,
      "code": {
        "startLine": 170,
        "length": 9,
        "offset": 121,
        "surroundingCode": "\n// AddComponent - adds a single Component to the response message\nfunc (i *InteractionResponseMessages) AddComponent(c *Component) *InteractionResponseMessages {\n\ti.Data.Components = append(i.Data.Components, *c)\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoDeprecation"
  },
  "hash": "0c3866457006dadea87580796e2798e13086db268c38a3cf987f5b0924675bcb"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Deprecated element",
  "tags": [
    "go"
  ],
  "severity": "High",
  "comment": "'Component' is deprecated",
  "detailsInfo": "Reports usages of deprecated elements.\n\nExample:\n\n    // Deprecated: Use io.SeekStart, io.SeekCurrent, and io.SeekEnd.\n    const (\n     SEEK_SET int = 0 // seek relative to the origin of the file\n     SEEK_CUR int = 1 // seek relative to the current offset\n     SEEK_END int = 2 // seek relative to the end\n    )\n\nAccording to [Constants at golang.org](https://golang.org/pkg/os/#pkg-constants), `SEEK_SET`, `SEEK_CUR`,\nand `SEEK_END` are deprecated.",
  "sources": [
    {
      "type": "file",
      "path": "api/webhook_endpoints.go",
      "language": "go",
      "line": 213,
      "offset": 20,
      "length": 9,
      "code": {
        "startLine": 211,
        "length": 9,
        "offset": 277,
        "surroundingCode": "\tEmbeds          []Embed         `json:\"embeds\"`                     // embedded rich content; Required - one of content, file, embeds\n\tAllowedMentions AllowedMentions `json:\"allowed_mentions,omitempty\"` // allowed mentions for the message; Required - false\n\tComponents      []Component     `json:\"components,omitempty\"`       // the components to include with the message - Required - false\n\tPayloadJson     string          `json:\"payload_json\"`               // JSON encoded body of non-file params; Required - \"multipart/form-data\" only\n\tAttachments     []Attachment    `json:\"attachments,omitempty\"`      // Attachment objects with filename and description; Required - false"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoDeprecation"
  },
  "hash": "fdd0e6dcc1d68c6b420f7a8e2ecbfc1bae9024668d5a679059d53276f832d738"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Deprecated element",
  "tags": [
    "go"
  ],
  "severity": "High",
  "comment": "'Component' is deprecated",
  "detailsInfo": "Reports usages of deprecated elements.\n\nExample:\n\n    // Deprecated: Use io.SeekStart, io.SeekCurrent, and io.SeekEnd.\n    const (\n     SEEK_SET int = 0 // seek relative to the origin of the file\n     SEEK_CUR int = 1 // seek relative to the current offset\n     SEEK_END int = 2 // seek relative to the end\n    )\n\nAccording to [Constants at golang.org](https://golang.org/pkg/os/#pkg-constants), `SEEK_SET`, `SEEK_CUR`,\nand `SEEK_END` are deprecated.",
  "sources": [
    {
      "type": "file",
      "path": "api/webhook_endpoints.go",
      "language": "go",
      "line": 280,
      "offset": 21,
      "length": 9,
      "code": {
        "startLine": 278,
        "length": 9,
        "offset": 221,
        "surroundingCode": "\tEmbeds          []*Embed         `json:\"embeds,omitempty\"`           // embedded rich content\n\tAllowedMentions *AllowedMentions `json:\"allowed_mentions,omitempty\"` // allowed mentions for the message\n\tComponents      []*Component     `json:\"components,omitempty\"`       // the components to include with the message\n\tPayloadJson     *string          `json:\"payload_json,omitempty\"`     // JSON encoded body of non-file params (multipart/form-data only)\n\tAttachments     []*Attachment    `json:\"attachments,omitempty\"`      // attached files to keep and possible descriptions for new files"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoDeprecation"
  },
  "hash": "04ce42b498ca771975e87c5f3e1e19dd177721e299bd7bd480bcb4d6b1cd9c19"
}]}