{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "Exported element should have a comment",
  "severity": "Moderate",
  "comment": "Exported method 'CreateGuildTemplate' should have a comment or be unexported",
  "detailsInfo": "Reports exported declarations without a documentation comment. According to [Doc Comments at golang.org](https://golang.org/wiki/CodeReviewComments#doc-comments), all top-level exported names should have doc comments.\n\nAlso, for more information about comment sentences, see [Comment\nSentences at golang.org](https://golang.org/wiki/CodeReviewComments#comment-sentences).\n\nTo add a comment, you can apply the **Add comment** quick-fix.",
  "sources": [
    {
      "type": "file",
      "path": "api/guild_template_endpoints.go",
      "language": "go",
      "line": 66,
      "offset": 17,
      "length": 19,
      "code": {
        "startLine": 64,
        "length": 19,
        "offset": 19,
        "surroundingCode": "}\n\nfunc (g *Guild) CreateGuildTemplate(payload CreateGuildTemplateJSON) (*GuildTemplate, error) {\n\tu := parseRoute(fmt.Sprintf(createGuildTemplate, api, g.ID.String()))\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoExportedElementShouldHaveComment"
  },
  "hash": "0a405e1934245580a74f671afcb40c357c5689af5f9490a337d605eea3f56fb4"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "Exported element should have a comment",
  "severity": "Moderate",
  "comment": "Exported type 'ModifyGuildTemplateJSON' should have a comment or be unexported",
  "detailsInfo": "Reports exported declarations without a documentation comment. According to [Doc Comments at golang.org](https://golang.org/wiki/CodeReviewComments#doc-comments), all top-level exported names should have doc comments.\n\nAlso, for more information about comment sentences, see [Comment\nSentences at golang.org](https://golang.org/wiki/CodeReviewComments#comment-sentences).\n\nTo add a comment, you can apply the **Add comment** quick-fix.",
  "sources": [
    {
      "type": "file",
      "path": "api/guild_template_endpoints.go",
      "language": "go",
      "line": 107,
      "offset": 6,
      "length": 23,
      "code": {
        "startLine": 105,
        "length": 23,
        "offset": 8,
        "surroundingCode": "}\n\ntype ModifyGuildTemplateJSON struct {\n\tCreateGuildTemplateJSON\n}"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoExportedElementShouldHaveComment"
  },
  "hash": "1f40dab005dd4755f566f92c1c1eb7191b88184e3842486be86e9cc0b14c4b8b"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "Exported element should have a comment",
  "severity": "Moderate",
  "comment": "Exported type 'MessageComponentData' should have a comment or be unexported",
  "detailsInfo": "Reports exported declarations without a documentation comment. According to [Doc Comments at golang.org](https://golang.org/wiki/CodeReviewComments#doc-comments), all top-level exported names should have doc comments.\n\nAlso, for more information about comment sentences, see [Comment\nSentences at golang.org](https://golang.org/wiki/CodeReviewComments#comment-sentences).\n\nTo add a comment, you can apply the **Add comment** quick-fix.",
  "sources": [
    {
      "type": "file",
      "path": "api/interactions.go",
      "language": "go",
      "line": 75,
      "offset": 6,
      "length": 20,
      "code": {
        "startLine": 73,
        "length": 20,
        "offset": 8,
        "surroundingCode": "}\n\ntype MessageComponentData struct {\n\tCustomID      string        `json:\"custom_id\"`      // the custom_id of the component\n\tComponentType ComponentType `json:\"component_type\"` // the type of the component"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoExportedElementShouldHaveComment"
  },
  "hash": "49579eb488d05c1fd0dca86ed511b83370635699a7137cb2f2f9676d70107271"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "Exported element should have a comment",
  "severity": "Moderate",
  "comment": "Exported type 'ModalSubmitData' should have a comment or be unexported",
  "detailsInfo": "Reports exported declarations without a documentation comment. According to [Doc Comments at golang.org](https://golang.org/wiki/CodeReviewComments#doc-comments), all top-level exported names should have doc comments.\n\nAlso, for more information about comment sentences, see [Comment\nSentences at golang.org](https://golang.org/wiki/CodeReviewComments#comment-sentences).\n\nTo add a comment, you can apply the **Add comment** quick-fix.",
  "sources": [
    {
      "type": "file",
      "path": "api/interactions.go",
      "language": "go",
      "line": 81,
      "offset": 6,
      "length": 15,
      "code": {
        "startLine": 79,
        "length": 15,
        "offset": 8,
        "surroundingCode": "}\n\ntype ModalSubmitData struct {\n\tCustomID   string      `json:\"custom_id\"`  // the custom_id of the modal\n\tComponents []Component `json:\"components\"` // the values submitted by the user"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoExportedElementShouldHaveComment"
  },
  "hash": "074cae396b594bc1a4e2cf8259645b08df76e14cb83f9d23cdff70d965a89659"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "Exported element should have a comment",
  "severity": "Moderate",
  "comment": "Exported type 'CreateGuildJSON' should have a comment or be unexported",
  "detailsInfo": "Reports exported declarations without a documentation comment. According to [Doc Comments at golang.org](https://golang.org/wiki/CodeReviewComments#doc-comments), all top-level exported names should have doc comments.\n\nAlso, for more information about comment sentences, see [Comment\nSentences at golang.org](https://golang.org/wiki/CodeReviewComments#comment-sentences).\n\nTo add a comment, you can apply the **Add comment** quick-fix.",
  "sources": [
    {
      "type": "file",
      "path": "api/guild_endpoints.go",
      "language": "go",
      "line": 51,
      "offset": 6,
      "length": 15,
      "code": {
        "startLine": 49,
        "length": 15,
        "offset": 8,
        "surroundingCode": "}\n\ntype CreateGuildJSON struct {\n\tName                        string                          `json:\"name\"`                          // guild name (2-100 characters, excluding trailing and leading whitespace)\n\tIcon                        *string                         `json:\"icon\"`                          // icon hash"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoExportedElementShouldHaveComment"
  },
  "hash": "9ebc4afe0adfc8a8229ff4819b6582254803a678b09f8e29f0a02afe5a9b277b"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "Exported element should have a comment",
  "severity": "Moderate",
  "comment": "Exported type 'ModifyGuildJSON' should have a comment or be unexported",
  "detailsInfo": "Reports exported declarations without a documentation comment. According to [Doc Comments at golang.org](https://golang.org/wiki/CodeReviewComments#doc-comments), all top-level exported names should have doc comments.\n\nAlso, for more information about comment sentences, see [Comment\nSentences at golang.org](https://golang.org/wiki/CodeReviewComments#comment-sentences).\n\nTo add a comment, you can apply the **Add comment** quick-fix.",
  "sources": [
    {
      "type": "file",
      "path": "api/guild_endpoints.go",
      "language": "go",
      "line": 117,
      "offset": 6,
      "length": 15,
      "code": {
        "startLine": 115,
        "length": 15,
        "offset": 8,
        "surroundingCode": "}\n\ntype ModifyGuildJSON struct {\n\tName                        string                           `json:\"name\"`                          // guild name (2-100 characters, excluding trailing and leading whitespace)\n\tVerificationLevel           *VerificationLevel               `json:\"verification_level\"`            // verification level required for the guild"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoExportedElementShouldHaveComment"
  },
  "hash": "a3bb0c0ece49c7832d2f272fdf98b6eed7e62bac40f61ced36ac46cca00bc1e1"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "Exported element should have a comment",
  "severity": "Moderate",
  "comment": "Exported type 'CreateGuildChannelJSON' should have a comment or be unexported",
  "detailsInfo": "Reports exported declarations without a documentation comment. According to [Doc Comments at golang.org](https://golang.org/wiki/CodeReviewComments#doc-comments), all top-level exported names should have doc comments.\n\nAlso, for more information about comment sentences, see [Comment\nSentences at golang.org](https://golang.org/wiki/CodeReviewComments#comment-sentences).\n\nTo add a comment, you can apply the **Add comment** quick-fix.",
  "sources": [
    {
      "type": "file",
      "path": "api/guild_endpoints.go",
      "language": "go",
      "line": 178,
      "offset": 6,
      "length": 22,
      "code": {
        "startLine": 176,
        "length": 22,
        "offset": 8,
        "surroundingCode": "}\n\ntype CreateGuildChannelJSON struct {\n\tName                       string      `json:\"name,omitempty\"`                          // the name of the channel (1-100 characters)\n\tType                       ChannelType `json:\"type\"`                                    // the ChannelType"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoExportedElementShouldHaveComment"
  },
  "hash": "2a7c375533e9e244db5f561ba7abbc0a2588fda6fbfcb82b3f912504d28ce6d4"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "Exported element should have a comment",
  "severity": "Moderate",
  "comment": "Exported method 'CreateGuildRole' should have a comment or be unexported",
  "detailsInfo": "Reports exported declarations without a documentation comment. According to [Doc Comments at golang.org](https://golang.org/wiki/CodeReviewComments#doc-comments), all top-level exported names should have doc comments.\n\nAlso, for more information about comment sentences, see [Comment\nSentences at golang.org](https://golang.org/wiki/CodeReviewComments#comment-sentences).\n\nTo add a comment, you can apply the **Add comment** quick-fix.",
  "sources": [
    {
      "type": "file",
      "path": "api/guild_endpoints.go",
      "language": "go",
      "line": 469,
      "offset": 17,
      "length": 15,
      "code": {
        "startLine": 467,
        "length": 15,
        "offset": 19,
        "surroundingCode": "}\n\nfunc (g *Guild) CreateGuildRole(payload CreateGuildRoleJSON, reason *string) ([]Role, error) {\n\tu := parseRoute(fmt.Sprintf(createGuildRole, api, g.ID.String()))\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoExportedElementShouldHaveComment"
  },
  "hash": "7849327d2a466572f94df89ac0df06df07efa1f32d23c85773755a336e9f4d67"
},{
  "tool": "Code Inspection",
  "category": "Code style issues",
  "type": "Exported element should have a comment",
  "severity": "Moderate",
  "comment": "Exported type 'GetGuildPruneCountResponse' should have a comment or be unexported",
  "detailsInfo": "Reports exported declarations without a documentation comment. According to [Doc Comments at golang.org](https://golang.org/wiki/CodeReviewComments#doc-comments), all top-level exported names should have doc comments.\n\nAlso, for more information about comment sentences, see [Comment\nSentences at golang.org](https://golang.org/wiki/CodeReviewComments#comment-sentences).\n\nTo add a comment, you can apply the **Add comment** quick-fix.",
  "sources": [
    {
      "type": "file",
      "path": "api/guild_endpoints.go",
      "language": "go",
      "line": 590,
      "offset": 6,
      "length": 26,
      "code": {
        "startLine": 588,
        "length": 26,
        "offset": 8,
        "surroundingCode": "}\n\ntype GetGuildPruneCountResponse struct {\n\tPruned *uint64 `json:\"pruned\"`\n}"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoExportedElementShouldHaveComment"
  },
  "hash": "7f755b31d9e97cc1134770e6f74fdf7a32a939c6551baae9c9d843f9e5e9cdfd"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Deprecated element",
  "severity": "High",
  "comment": "'Component' is deprecated",
  "detailsInfo": "Reports usages of deprecated elements.\n\nExample:\n\n    // Deprecated: Use io.SeekStart, io.SeekCurrent, and io.SeekEnd.\n    const (\n     SEEK_SET int = 0 // seek relative to the origin of the file\n     SEEK_CUR int = 1 // seek relative to the current offset\n     SEEK_END int = 2 // seek relative to the end\n    )\n\nAccording to [Constants at golang.org](https://golang.org/pkg/os/#pkg-constants), `SEEK_SET`, `SEEK_CUR`,\nand `SEEK_END` are deprecated.",
  "sources": [
    {
      "type": "file",
      "path": "api/channel.go",
      "language": "go",
      "line": 138,
      "offset": 22,
      "length": 9,
      "code": {
        "startLine": 136,
        "length": 9,
        "offset": 307,
        "surroundingCode": "\tInteraction       MessageInteraction `json:\"interaction,omitempty\"`        // sent if the message is a response to an Interaction\n\tThread            Channel            `json:\"thread,omitempty\"`             // the thread that was started from this message, includes ThreadMember object\n\tComponents        []Component        `json:\"components,omitempty\"`         // sent if the message contains components like buttons, action rows, or other interactive components\n\tStickerItems      []string           `json:\"sticker_items,omitempty\"`      // sent if the message contains stickers\n\tStickers          []string           `json:\"stickers,omitempty\"`           // Deprecated: the stickers sent with the message"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoDeprecation"
  },
  "hash": "b8693c267292fa8244323c7e40083034b57091073d3a2f7f2718e15b1defb8ce"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Deprecated element",
  "severity": "High",
  "comment": "'Component' is deprecated",
  "detailsInfo": "Reports usages of deprecated elements.\n\nExample:\n\n    // Deprecated: Use io.SeekStart, io.SeekCurrent, and io.SeekEnd.\n    const (\n     SEEK_SET int = 0 // seek relative to the origin of the file\n     SEEK_CUR int = 1 // seek relative to the current offset\n     SEEK_END int = 2 // seek relative to the end\n    )\n\nAccording to [Constants at golang.org](https://golang.org/pkg/os/#pkg-constants), `SEEK_SET`, `SEEK_CUR`,\nand `SEEK_END` are deprecated.",
  "sources": [
    {
      "type": "file",
      "path": "api/channel.go",
      "language": "go",
      "line": 642,
      "offset": 21,
      "length": 9,
      "code": {
        "startLine": 640,
        "length": 9,
        "offset": 220,
        "surroundingCode": "\tAllowedMentions  AllowedMentions  `json:\"allowed_mentions\"`  // allowed mentions for the message\n\tMessageReference MessageReference `json:\"message_reference\"` // include to make your message a reply\n\tComponents       []Component      `json:\"components\"`        // the components to include with the message\n\tStickerIDs       []Snowflake      `json:\"sticker_ids\"`       // IDs of up to 3 stickers in the server to send in the message\n\tPayloadJson      string           `json:\"payload_json\"`      // JSON encoded body of non-file params"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoDeprecation"
  },
  "hash": "5e673fb90834e6a43f0b43b4698223544a2797bd41e16999c25182da625b1713"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Deprecated element",
  "severity": "High",
  "comment": "'Component' is deprecated",
  "detailsInfo": "Reports usages of deprecated elements.\n\nExample:\n\n    // Deprecated: Use io.SeekStart, io.SeekCurrent, and io.SeekEnd.\n    const (\n     SEEK_SET int = 0 // seek relative to the origin of the file\n     SEEK_CUR int = 1 // seek relative to the current offset\n     SEEK_END int = 2 // seek relative to the end\n    )\n\nAccording to [Constants at golang.org](https://golang.org/pkg/os/#pkg-constants), `SEEK_SET`, `SEEK_CUR`,\nand `SEEK_END` are deprecated.",
  "sources": [
    {
      "type": "file",
      "path": "api/channel.go",
      "language": "go",
      "line": 796,
      "offset": 21,
      "length": 9,
      "code": {
        "startLine": 794,
        "length": 9,
        "offset": 149,
        "surroundingCode": "\tFlags           *int             `json:\"flags,omitempty\"`\n\tAllowedMentions *AllowedMentions `json:\"allowed_mentions,omitempty\"`\n\tComponents      []*Component     `json:\"components,omitempty\"`\n\tPayloadJson     *string          `json:\"payload_json,omitempty\"`\n\tAttachments     []*Attachment    `json:\"attachments,omitempty\"`"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoDeprecation"
  },
  "hash": "b3c62922767d3ef6e0ad471a0cc0624fb094c85492186c89c4ce2ab32d57dcea"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Deprecated element",
  "severity": "High",
  "comment": "'Component' is deprecated",
  "detailsInfo": "Reports usages of deprecated elements.\n\nExample:\n\n    // Deprecated: Use io.SeekStart, io.SeekCurrent, and io.SeekEnd.\n    const (\n     SEEK_SET int = 0 // seek relative to the origin of the file\n     SEEK_CUR int = 1 // seek relative to the current offset\n     SEEK_END int = 2 // seek relative to the end\n    )\n\nAccording to [Constants at golang.org](https://golang.org/pkg/os/#pkg-constants), `SEEK_SET`, `SEEK_CUR`,\nand `SEEK_END` are deprecated.",
  "sources": [
    {
      "type": "file",
      "path": "api/channel.go",
      "language": "go",
      "line": 1133,
      "offset": 20,
      "length": 9,
      "code": {
        "startLine": 1131,
        "length": 9,
        "offset": 222,
        "surroundingCode": "\tEmbeds          []Embed         `json:\"embeds\"`           // embedded rich content (up to 6000 characters)\n\tAllowedMentions AllowedMentions `json:\"allowed_mentions\"` // allowed mentions for the message\n\tComponents      []Component     `json:\"components\"`       // the components to include with the message\n\tStickerIDs      []Snowflake     `json:\"sticker_ids\"`      // IDs of up to 3 stickers in the server to send in the message\n\tPayloadJson     string          `json:\"payload_json\"`     // JSON encoded body of non-file params"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoDeprecation"
  },
  "hash": "3b5699f95f5bd292bc98293d0984d22b17ff6e02bf1a2ea19da5444ac6e99a50"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Deprecated element",
  "severity": "High",
  "comment": "'Component' is deprecated",
  "detailsInfo": "Reports usages of deprecated elements.\n\nExample:\n\n    // Deprecated: Use io.SeekStart, io.SeekCurrent, and io.SeekEnd.\n    const (\n     SEEK_SET int = 0 // seek relative to the origin of the file\n     SEEK_CUR int = 1 // seek relative to the current offset\n     SEEK_END int = 2 // seek relative to the end\n    )\n\nAccording to [Constants at golang.org](https://golang.org/pkg/os/#pkg-constants), `SEEK_SET`, `SEEK_CUR`,\nand `SEEK_END` are deprecated.",
  "sources": [
    {
      "type": "file",
      "path": "api/interactions.go",
      "language": "go",
      "line": 83,
      "offset": 15,
      "length": 9,
      "code": {
        "startLine": 81,
        "length": 9,
        "offset": 118,
        "surroundingCode": "type ModalSubmitData struct {\n\tCustomID   string      `json:\"custom_id\"`  // the custom_id of the modal\n\tComponents []Component `json:\"components\"` // the values submitted by the user\n}\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoDeprecation"
  },
  "hash": "2c76c86127466435cd479bbaab272156c2ee1402ea2c9f3fe0086b62b014ecc6"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Deprecated element",
  "severity": "High",
  "comment": "'Component' is deprecated",
  "detailsInfo": "Reports usages of deprecated elements.\n\nExample:\n\n    // Deprecated: Use io.SeekStart, io.SeekCurrent, and io.SeekEnd.\n    const (\n     SEEK_SET int = 0 // seek relative to the origin of the file\n     SEEK_CUR int = 1 // seek relative to the current offset\n     SEEK_END int = 2 // seek relative to the end\n    )\n\nAccording to [Constants at golang.org](https://golang.org/pkg/os/#pkg-constants), `SEEK_SET`, `SEEK_CUR`,\nand `SEEK_END` are deprecated.",
  "sources": [
    {
      "type": "file",
      "path": "api/interactions.go",
      "language": "go",
      "line": 185,
      "offset": 20,
      "length": 9,
      "code": {
        "startLine": 183,
        "length": 9,
        "offset": 223,
        "surroundingCode": "\tAllowedMentions *AllowedMentions `json:\"allowed_mentions\"`      // AllowedMentionType object\n\tFlags           MessageFlags     `json:\"flags,omitempty\"`       // set to 64 to make your response Ephemeral\n\tComponents      []Component      `json:\"components,omitempty\"`  // message components\n\tAttachments     []Attachment     `json:\"attachments,omitempty\"` // attachment objects with filename and description\n}"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoDeprecation"
  },
  "hash": "71f8109f1733b0f606a23edf438778d8c5e04f2b7aa37ec6b0af1fa4ea1cc27f"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Deprecated element",
  "severity": "High",
  "comment": "'Component' is deprecated",
  "detailsInfo": "Reports usages of deprecated elements.\n\nExample:\n\n    // Deprecated: Use io.SeekStart, io.SeekCurrent, and io.SeekEnd.\n    const (\n     SEEK_SET int = 0 // seek relative to the origin of the file\n     SEEK_CUR int = 1 // seek relative to the current offset\n     SEEK_END int = 2 // seek relative to the end\n    )\n\nAccording to [Constants at golang.org](https://golang.org/pkg/os/#pkg-constants), `SEEK_SET`, `SEEK_CUR`,\nand `SEEK_END` are deprecated.",
  "sources": [
    {
      "type": "file",
      "path": "api/interactions.go",
      "language": "go",
      "line": 198,
      "offset": 15,
      "length": 9,
      "code": {
        "startLine": 196,
        "length": 9,
        "offset": 225,
        "surroundingCode": "\tCustomID   string      `json:\"custom_id\"`  // a developer-defined identifier for the component, max 100 characters\n\tTitle      string      `json:\"title\"`      // the title of the popup modal, max 45 characters\n\tComponents []Component `json:\"components\"` // between 1 and 5 (inclusive) components that make up the modal\n}\n"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoDeprecation"
  },
  "hash": "12a63050aac2213085f9418ce7652a23229efc43f5310adb8978ae89d3e243d7"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Deprecated element",
  "severity": "High",
  "comment": "Deprecated type is still used",
  "detailsInfo": "Reports usages of deprecated elements.\n\nExample:\n\n    // Deprecated: Use io.SeekStart, io.SeekCurrent, and io.SeekEnd.\n    const (\n     SEEK_SET int = 0 // seek relative to the origin of the file\n     SEEK_CUR int = 1 // seek relative to the current offset\n     SEEK_END int = 2 // seek relative to the end\n    )\n\nAccording to [Constants at golang.org](https://golang.org/pkg/os/#pkg-constants), `SEEK_SET`, `SEEK_CUR`,\nand `SEEK_END` are deprecated.",
  "sources": [
    {
      "type": "file",
      "path": "api/message_components.go",
      "language": "go",
      "line": 23,
      "offset": 6,
      "length": 9,
      "code": {
        "startLine": 21,
        "length": 9,
        "offset": 121,
        "surroundingCode": "// The top-level component's field is an array of Action Row components.\n// Deprecated: Use specific component type\ntype Component struct {\n\tType        ComponentType  `json:\"type\"`                  // ComponentType; valid for all types\n\tCustomID    string         `json:\"custom_id,omitempty\"`   // a developer-defined identifier for the button, max 100 characters"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoDeprecation"
  },
  "hash": "4eeb7e053dbb5f7cac0c935872c4fafdba00f06eb390c6c05105eabfcfa40c62"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Deprecated element",
  "severity": "High",
  "comment": "'Component' is deprecated",
  "detailsInfo": "Reports usages of deprecated elements.\n\nExample:\n\n    // Deprecated: Use io.SeekStart, io.SeekCurrent, and io.SeekEnd.\n    const (\n     SEEK_SET int = 0 // seek relative to the origin of the file\n     SEEK_CUR int = 1 // seek relative to the current offset\n     SEEK_END int = 2 // seek relative to the end\n    )\n\nAccording to [Constants at golang.org](https://golang.org/pkg/os/#pkg-constants), `SEEK_SET`, `SEEK_CUR`,\nand `SEEK_END` are deprecated.",
  "sources": [
    {
      "type": "file",
      "path": "api/message_components.go",
      "language": "go",
      "line": 35,
      "offset": 16,
      "length": 9,
      "code": {
        "startLine": 33,
        "length": 9,
        "offset": 272,
        "surroundingCode": "\tMaxValues   int            `json:\"max_values,omitempty\"`  // the maximum number of items that can be chosen; default 1, max 25\n\tPlaceholder string         `json:\"placeholder,omitempty\"` // custom placeholder text if nothing is selected, max 100 characters\n\tComponents  []Component    `json:\"components,omitempty\"`  // a list of child components\n\tMinLength   int            `json:\"min_length,omitempty\"`  // the minimum input length for a text input\n\tMaxLength   int            `json:\"max_length,omitempty\"`  // the maximum input length for a text input"
      }
    }
  ],
  "attributes": {
    "module": "project",
    "inspectionName": "GoDeprecation"
  },
  "hash": "985e78b7bf67fa5c69b29d57030bc99a622b68abb87d689a06b32bb9e83a1208"
}]}